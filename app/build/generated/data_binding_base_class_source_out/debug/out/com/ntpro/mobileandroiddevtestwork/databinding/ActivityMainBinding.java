// Generated by view binder compiler. Do not edit!
package com.ntpro.mobileandroiddevtestwork.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ntpro.mobileandroiddevtestwork.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton buttomSort;

  @NonNull
  public final ImageView icnDown;

  @NonNull
  public final ImageView icnUp;

  @NonNull
  public final RecyclerView recyclerDeal;

  @NonNull
  public final TextView rowDateOfChange;

  @NonNull
  public final TextView rowName;

  @NonNull
  public final TextView rowParty;

  @NonNull
  public final TextView rowPrice;

  @NonNull
  public final TextView rowVolume;

  @NonNull
  public final TableLayout tableLayout;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton buttomSort, @NonNull ImageView icnDown, @NonNull ImageView icnUp,
      @NonNull RecyclerView recyclerDeal, @NonNull TextView rowDateOfChange,
      @NonNull TextView rowName, @NonNull TextView rowParty, @NonNull TextView rowPrice,
      @NonNull TextView rowVolume, @NonNull TableLayout tableLayout) {
    this.rootView = rootView;
    this.buttomSort = buttomSort;
    this.icnDown = icnDown;
    this.icnUp = icnUp;
    this.recyclerDeal = recyclerDeal;
    this.rowDateOfChange = rowDateOfChange;
    this.rowName = rowName;
    this.rowParty = rowParty;
    this.rowPrice = rowPrice;
    this.rowVolume = rowVolume;
    this.tableLayout = tableLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttom_sort;
      AppCompatButton buttomSort = ViewBindings.findChildViewById(rootView, id);
      if (buttomSort == null) {
        break missingId;
      }

      id = R.id.icn_down;
      ImageView icnDown = ViewBindings.findChildViewById(rootView, id);
      if (icnDown == null) {
        break missingId;
      }

      id = R.id.icn_up;
      ImageView icnUp = ViewBindings.findChildViewById(rootView, id);
      if (icnUp == null) {
        break missingId;
      }

      id = R.id.recycler_deal;
      RecyclerView recyclerDeal = ViewBindings.findChildViewById(rootView, id);
      if (recyclerDeal == null) {
        break missingId;
      }

      id = R.id.row_date_of_change;
      TextView rowDateOfChange = ViewBindings.findChildViewById(rootView, id);
      if (rowDateOfChange == null) {
        break missingId;
      }

      id = R.id.row_name;
      TextView rowName = ViewBindings.findChildViewById(rootView, id);
      if (rowName == null) {
        break missingId;
      }

      id = R.id.row_party;
      TextView rowParty = ViewBindings.findChildViewById(rootView, id);
      if (rowParty == null) {
        break missingId;
      }

      id = R.id.row_price;
      TextView rowPrice = ViewBindings.findChildViewById(rootView, id);
      if (rowPrice == null) {
        break missingId;
      }

      id = R.id.row_volume;
      TextView rowVolume = ViewBindings.findChildViewById(rootView, id);
      if (rowVolume == null) {
        break missingId;
      }

      id = R.id.tableLayout;
      TableLayout tableLayout = ViewBindings.findChildViewById(rootView, id);
      if (tableLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, buttomSort, icnDown, icnUp,
          recyclerDeal, rowDateOfChange, rowName, rowParty, rowPrice, rowVolume, tableLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
